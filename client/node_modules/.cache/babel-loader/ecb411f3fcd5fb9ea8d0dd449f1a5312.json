{"ast":null,"code":"import { shopActionTypes as types } from \"./shop.types\";\nimport { firestore, convertCollectionsSnaphsotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionStart = () => ({\n  type: types.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: types.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: types.FETCH_COLLECTIONS_FAILURE,\n  pyload: errorMessage\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(async snapshot => {\n      const collectionsMap = convertCollectionsSnaphsotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/ilyanesmiyanov/Documents/projects/e-shop/e-shop/client/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","types","firestore","convertCollectionsSnaphsotToMap","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","pyload","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,SAASA,eAAe,IAAIC,KAA5B,QAAyC,cAAzC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEJ,KAAK,CAACK;AAD6B,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AACvDH,EAAAA,IAAI,EAAEJ,KAAK,CAACQ,yBAD2C;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAAL,CAA7C;AAKP,OAAO,MAAMG,sBAAsB,GAAGC,YAAY,KAAK;AACrDP,EAAAA,IAAI,EAAEJ,KAAK,CAACY,yBADyC;AAErDC,EAAAA,MAAM,EAAEF;AAF6C,CAAL,CAA3C;AAKP,OAAO,MAAMG,yBAAyB,GAAG,MAAM;AAC7C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACZ,oBAAoB,EAArB,CAAR;AAEAa,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQ,MAAMC,QAAN,IAAkB;AACtB,YAAMb,cAAc,GAAGL,+BAA+B,CAACkB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACT,sBAAsB,CAACC,cAAD,CAAvB,CAAR;AACD,KALH,EAMGc,KANH,CAMSC,KAAK,IAAIP,QAAQ,CAACL,sBAAsB,CAACY,KAAK,CAACC,OAAP,CAAvB,CAN1B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import { shopActionTypes as types } from \"./shop.types\";\n\nimport {\n  firestore,\n  convertCollectionsSnaphsotToMap\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionStart = () => ({\n  type: types.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: types.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\n\nexport const fetchCollectionFailure = errorMessage => ({\n  type: types.FETCH_COLLECTIONS_FAILURE,\n  pyload: errorMessage\n});\n\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n\n    collectionRef\n      .get()\n      .then(async snapshot => {\n        const collectionsMap = convertCollectionsSnaphsotToMap(snapshot);\n        dispatch(fetchCollectionSuccess(collectionsMap));\n      })\n      .catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}