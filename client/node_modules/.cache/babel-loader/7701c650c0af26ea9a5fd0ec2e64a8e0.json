{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyCrjqQqbXuFst5gKg8V1pPkxWAOgGX6ElI\",\n  authDomain: \"e-shop-2393a.firebaseapp.com\",\n  databaseURL: \"https://e-shop-2393a.firebaseio.com\",\n  projectId: \"e-shop-2393a\",\n  storageBucket: \"e-shop-2393a.appspot.com\",\n  messagingSenderId: \"461415991566\",\n  appId: \"1:461415991566:web:b3f322cc9078df0b4e2f5f\"\n};\nfirebase.initializeApp(config);\nexport const createUsersProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`); //получаем ссылку на объект(документ) по указанному пути\n\n  const snapShot = await userRef.get(); //получаем снимок объекта (список доступных полей)\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth; //userAuth - большой объект возвращаемый API firebase\n\n    const createdTime = new Date();\n\n    try {\n      await userRef.set({\n        // метод firebase, позволяющий сохранить данные в БД\n        displayName,\n        email,\n        createdTime,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user \", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocument = async (collectionKey, objToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch(); // дожидается, пока все объекты не будут сформированы для отправки, после чего они будут отправлены одним запросом\n\n  objToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc(); //создаем уникальный ключ для каждого объекта, если передать в doc() имя, то оно будет задано вручную\n\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnaphsotToMap = collectionsSnapshot => {\n  const transformedCollection = collectionsSnapshot.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((acc, collection) => {\n    acc[collection.title.toLowerCase()] = collection;\n    return acc;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/Users/ilyanesmiyanov/Documents/projects/e-shop/e-shop/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","createUsersProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdTime","Date","set","error","console","log","message","addCollectionAndDocument","collectionKey","objToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnaphsotToMap","collectionsSnapshot","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","acc","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyCrjqQqbXuFst5gKg8V1pPkxWAOgGX6ElI\",\n  authDomain: \"e-shop-2393a.firebaseapp.com\",\n  databaseURL: \"https://e-shop-2393a.firebaseio.com\",\n  projectId: \"e-shop-2393a\",\n  storageBucket: \"e-shop-2393a.appspot.com\",\n  messagingSenderId: \"461415991566\",\n  appId: \"1:461415991566:web:b3f322cc9078df0b4e2f5f\"\n};\n\nfirebase.initializeApp(config);\n\nexport const createUsersProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`); //получаем ссылку на объект(документ) по указанному пути\n\n  const snapShot = await userRef.get(); //получаем снимок объекта (список доступных полей)\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth; //userAuth - большой объект возвращаемый API firebase\n    const createdTime = new Date();\n\n    try {\n      await userRef.set({\n        // метод firebase, позволяющий сохранить данные в БД\n        displayName,\n        email,\n        createdTime,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user \", error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const addCollectionAndDocument = async (collectionKey, objToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch(); // дожидается, пока все объекты не будут сформированы для отправки, после чего они будут отправлены одним запросом\n  objToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc(); //создаем уникальный ключ для каждого объекта, если передать в doc() имя, то оно будет задано вручную\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnaphsotToMap = collectionsSnapshot => {\n  const transformedCollection = collectionsSnapshot.docs.map(doc => {\n    const { title, items } = doc.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n\n  return transformedCollection.reduce((acc, collection) => {\n    acc[collection.title.toLowerCase()] = collection;\n    return acc;\n  }, {});\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}