{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\"; // storage equal window.localStorage\n\nimport storage from \"redux-persist/lib/storage\"; // storage equal window.sessionStorage\n// import sessionStorage from 'redux-persist/lib/storage'\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopReducer from \"./shop/shop.reducer\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whiteList: [\"cart\"],\n  blackList: [\"shop\", \"user\"]\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/ilyanesmiyanov/Documents/projects/e-shop/e-shop/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","shopReducer","persistConfig","key","whiteList","blackList","rootReducer","user","cart","directory","shop"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CACA;AACA;;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBN,EAAAA,OAFoB;AAGpBO,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHS;AAIpBC,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,MAAT;AAJS,CAAtB;AAOA,MAAMC,WAAW,GAAGX,eAAe,CAAC;AAClCY,EAAAA,IAAI,EAAET,WAD4B;AAElCU,EAAAA,IAAI,EAAET,WAF4B;AAGlCU,EAAAA,SAAS,EAAET,gBAHuB;AAIlCU,EAAAA,IAAI,EAAET;AAJ4B,CAAD,CAAnC;AAOA,eAAeL,cAAc,CAACM,aAAD,EAAgBI,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\n// storage equal window.localStorage\nimport storage from \"redux-persist/lib/storage\";\n// storage equal window.sessionStorage\n// import sessionStorage from 'redux-persist/lib/storage'\n\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopReducer from \"./shop/shop.reducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whiteList: [\"cart\"],\n  blackList: [\"shop\", \"user\"]\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);\n"]},"metadata":{},"sourceType":"module"}