{"ast":null,"code":"import { takeLatest, put, call } from \"redux-saga/effects\";\nimport { shopActionTypes as types } from \"./shop.types\";\nimport { firestore, convertCollectionsSnaphsotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionSuccess, fetchCollectionFailure } from \"./shop.actions\";\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnaphsotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    put(fetchCollectionFailure(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(types.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/Users/ilyanesmiyanov/Documents/projects/e-shop/e-shop/src/redux/shop/shop.sagas.js"],"names":["takeLatest","put","call","shopActionTypes","types","firestore","convertCollectionsSnaphsotToMap","fetchCollectionSuccess","fetchCollectionFailure","fetchCollectionAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,oBAAtC;AAEA,SAASC,eAAe,IAAIC,KAA5B,QAAyC,cAAzC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC/BI,+BAD+B,EAE/BM,QAF+B,CAAjC;AAIA,UAAMX,GAAG,CAACM,sBAAsB,CAACO,cAAD,CAAvB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACdd,IAAAA,GAAG,CAACO,sBAAsB,CAACO,KAAK,CAACC,OAAP,CAAvB,CAAH;AACD;AACF;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMjB,UAAU,CAACI,KAAK,CAACc,uBAAP,EAAgCT,oBAAhC,CAAhB;AACD","sourcesContent":["import { takeLatest, put, call } from \"redux-saga/effects\";\n\nimport { shopActionTypes as types } from \"./shop.types\";\n\nimport {\n  firestore,\n  convertCollectionsSnaphsotToMap\n} from \"../../firebase/firebase.utils\";\n\nimport { fetchCollectionSuccess, fetchCollectionFailure } from \"./shop.actions\";\n\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnaphsotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    put(fetchCollectionFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionStart() {\n  yield takeLatest(types.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}\n"]},"metadata":{},"sourceType":"module"}