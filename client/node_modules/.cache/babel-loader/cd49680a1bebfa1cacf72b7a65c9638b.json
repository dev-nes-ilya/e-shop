{"ast":null,"code":"import _objectSpread from \"/Users/ilyanesmiyanov/Documents/projects/e-shop/e-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyCrjqQqbXuFst5gKg8V1pPkxWAOgGX6ElI\",\n  authDomain: \"e-shop-2393a.firebaseapp.com\",\n  databaseURL: \"https://e-shop-2393a.firebaseio.com\",\n  projectId: \"e-shop-2393a\",\n  storageBucket: \"e-shop-2393a.appspot.com\",\n  messagingSenderId: \"461415991566\",\n  appId: \"1:461415991566:web:b3f322cc9078df0b4e2f5f\"\n};\nfirebase.initializeApp(config);\nexport const createUsersProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`); //получаем ссылку на объект(документ) по указанному пути\n\n  const snapShot = await userRef.get(); //получаем снимок объекта (список доступных полей)\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email; //userAuth - большой объект возвращаемый API firebase\n\n    const createdTime = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        // метод firebase, позволяющий сохранить данные в БД\n        displayName,\n        email,\n        createdTime\n      }, additionalData));\n    } catch (error) {\n      console.log(\"error creating user \", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/ilyanesmiyanov/Documents/projects/e-shop/e-shop/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","createUsersProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdTime","Date","set","error","console","log","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,8BAFC;AAGbC,EAAAA,WAAW,EAAE,qCAHA;AAIbC,EAAAA,SAAS,EAAE,cAJE;AAKbC,EAAAA,aAAa,EAAE,0BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AAEA,OAAO,MAAMS,0BAA0B,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC5E,MAAI,CAACD,QAAL,EAAe;AACb;AACD;;AAED,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB,CAL4E,CAKpB;;AAExD,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CAP4E,CAOtC;;AAEtC,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACZC,WADY,GACWT,QADX,CACZS,WADY;AAAA,UACCC,KADD,GACWV,QADX,CACCU,KADD,EACqB;;AACzC,UAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR;AACJ;AACAJ,QAAAA,WAFI;AAGJC,QAAAA,KAHI;AAIJC,QAAAA;AAJI,SAKDV,cALC,EAAN;AAOD,KARD,CAQE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAAK,CAACG,OAA1C;AACD;AACF;;AACD,SAAOf,OAAP;AACD,CA1BM;AA4BP,OAAO,MAAMgB,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AACP,MAAMgB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyCrjqQqbXuFst5gKg8V1pPkxWAOgGX6ElI\",\n  authDomain: \"e-shop-2393a.firebaseapp.com\",\n  databaseURL: \"https://e-shop-2393a.firebaseio.com\",\n  projectId: \"e-shop-2393a\",\n  storageBucket: \"e-shop-2393a.appspot.com\",\n  messagingSenderId: \"461415991566\",\n  appId: \"1:461415991566:web:b3f322cc9078df0b4e2f5f\"\n};\n\nfirebase.initializeApp(config);\n\nexport const createUsersProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`); //получаем ссылку на объект(документ) по указанному пути\n\n  const snapShot = await userRef.get(); //получаем снимок объекта (список доступных полей)\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth; //userAuth - большой объект возвращаемый API firebase\n    const createdTime = new Date();\n\n    try {\n      await userRef.set({\n        // метод firebase, позволяющий сохранить данные в БД\n        displayName,\n        email,\n        createdTime,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user \", error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}